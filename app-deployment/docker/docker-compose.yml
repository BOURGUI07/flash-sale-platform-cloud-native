services:
  app-postgres:
    image: "postgres:14.12"
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5

  app-redis:
    image: "redis:7.0"
    container_name: "app-redis"
    ports:
      - 6379:6379
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  grafana:
    image: grafana/grafana-oss:10.4.3
    container_name: grafana
    depends_on:
      - loki
      - prometheus
      - tempo
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=user
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - ./observability/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./observability/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./observability/grafana/grafana.ini:/etc/grafana/grafana.ini
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  loki:
    image: grafana/loki:2.9.8
    container_name: loki
    depends_on:
      - fluent-bit
    ports:
      - "3100:3100"
    networks:
      - app-network

  fluent-bit:
      image: grafana/fluent-bit-plugin-loki:2.9.8
      container_name: fluent-bit
      ports:
        - "24224:24224"
        - "2020:2020"    # For HTTP health check and metrics
      environment:
        - LOKI_URL=http://loki:3100/loki/api/v1/push
      volumes:
        - ./observability/fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      networks:
        - app-network
      restart: always

  prometheus:
    image: quay.io/prometheus/prometheus:v2.52.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network


  tempo:
    image: grafana/tempo:2.5.0
    container_name: tempo
    command: -config.file=/etc/tempo-config.yml
    ports:
      - "3110:3100"     # Tempo
      - "4317:4317"     # OTel
    volumes:
      - ./observability/tempo/tempo.yml:/etc/tempo-config.yml
    networks:
      - app-network




  config-service:
    image: "config-service:v8"
    depends_on:
      - fluent-bit
    ports:
      - 8888:8888
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/app/opentelemetry-javaagent.jar
      - OTEL_SERVICE_NAME=config-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_METRICS_EXPORTER=none
    networks:
      - app-network
    restart: on-failure
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224

  customer-service:
    image: "customer-service:v7"
    depends_on:
      - fluent-bit
      - app-postgres
      - config-service
    ports:
      - 6060:6060
    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 700m
    environment:
      - SPRING_R2DBC_URL=r2dbc:postgresql://app-postgres:5432/customer_db
      - SPRING_FLYWAY_URL=jdbc:postgresql://app-postgres:5432/customer_db
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - JAVA_TOOL_OPTIONS=-javaagent:/app/opentelemetry-javaagent.jar
      - OTEL_SERVICE_NAME=config-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_METRICS_EXPORTER=none
    networks:
      - app-network
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224

  product-service:
    image: "product-service:v7"
    depends_on:
      - fluent-bit
      - app-postgres
      - config-service
    ports:
      - 7070:7070
    deploy:
      resources:
        limits:
          memory: 700m
    environment:
      - SPRING_R2DBC_URL=r2dbc:postgresql://app-postgres:5432/product_db
      - SPRING_FLYWAY_URL=jdbc:postgresql://app-postgres:5432/product_db
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - JAVA_TOOL_OPTIONS=-javaagent:/app/opentelemetry-javaagent.jar
      - OTEL_SERVICE_NAME=config-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_METRICS_EXPORTER=none
    networks:
      - app-network
    restart: on-failure
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224

  aggregator-service:
    image: "aggregator-service:v7"
    depends_on:
      - fluent-bit
      - customer-service
      - product-service
    ports:
      - 8080:8080
    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 700m
    environment:
      - APP_CUSTOMER_SERVICE_URI=http://customer-service:6060
      - APP_PRODUCT_SERVICE_URI=http://product-service:7070
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - JAVA_TOOL_OPTIONS=-javaagent:/app/opentelemetry-javaagent.jar
      - OTEL_SERVICE_NAME=config-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_METRICS_EXPORTER=none
    networks:
      - app-network
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224

  edge-service:
    image: "edge-service:v7"
    depends_on:
      - fluent-bit
      - app-redis
      - aggregator-service
    ports:
      - 9000:9000
    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 700m
    environment:
      - AGGREGATOR_SERVICE_URL=http://aggregator-service:8080
      - CUSTOMER_SERVICE_URL=http://customer-service:6060
      - PRODUCT_SERVICE_URL=http://product-service:7070
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - SPRING_DATA_REDIS_HOST=app-redis
      - JAVA_TOOL_OPTIONS=-javaagent:/app/opentelemetry-javaagent.jar
      - OTEL_SERVICE_NAME=config-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_METRICS_EXPORTER=none
    networks:
      - app-network
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224

networks:
  app-network:
    driver: bridge
