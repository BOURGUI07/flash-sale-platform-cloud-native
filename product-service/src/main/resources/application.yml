spring:
  application:
    name: product-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  r2dbc:
    username: user
    password: password
    url: r2dbc:postgresql://localhost:5432/product_db
    pool:
      max-size: 10
      initial-size: 5
      max-create-connection-time: 2s
  flyway:
    user: ${spring.r2dbc.username}
    password: ${spring.r2dbc.password}
    url: jdbc:postgresql://localhost:5432/product_db
  config:
    import: "optional:configserver:"
  cloud:
    config:
      name: ${spring.application.name}
      uri: http://localhost:8888
      request-connect-timeout: 5000
      request-read-timeout: 5000
      fail-fast: true
      retry:
        max-attempts: 6
        initial-interval: 1000
        max-interval: 2000
        multiplier: 1.1


server:
  port: 7070
  shutdown: graceful
  netty:
    connection-timeout: 2s
    idle-timeout: 15s

management:
  endpoints:
    web:
      exposure:
        include: health, info, refresh, metrics, prometheus
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

logging:
  pattern:
    level: "%5p [${spring.application.name}, %X{trace_id}, %X{span_id}]"



